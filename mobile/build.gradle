apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

Properties credentials = new Properties()
credentials.load(new FileInputStream(file(rootProject.file("credentials.properties"))))
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId androidApplicationId
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode androidVersionCode
        versionName androidVersionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
            FABRIC_API_KEY: credentials["fabric.api.key"]
        ]
    }

    signingConfigs {
        master {
            storeFile file(credentials["signing.store.file"])
            storePassword credentials["signing.store.password"]
            keyAlias credentials["signing.key.alias"]
            keyPassword credentials["signing.key.password"]
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.master
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            sourceSets {
                release.java.srcDirs += 'src/release/kotlin'
            }
        }

        debug {
            versionNameSuffix "-DEBUG"
            applicationIdSuffix '.debug'
            debuggable true
            jniDebuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.master

            buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
            buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

            sourceSets {
                debug.java.srcDirs += 'src/debug/kotlin'
            }
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

configurations.all { config ->
    if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

dependencies {
    implementation project(path: ':domain')
    implementation project(path: ':data')

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:appcompat-v7:$supportVersion"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation("com.github.hotchemi:permissionsdispatcher:$permissionsdispatcherVersion") {
        exclude module: "support-v13"
    }
    kapt "com.github.hotchemi:permissionsdispatcher-processor:$permissionsdispatcherVersion"

    implementation "com.jakewharton.timber:timber:$timberVersion"

    // + android architecture - room

    //crashes
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    api ('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
        transitive = true
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"

    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation("com.nhaarman:mockito-kotlin:$kotlinMockitoVersion") {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
}
